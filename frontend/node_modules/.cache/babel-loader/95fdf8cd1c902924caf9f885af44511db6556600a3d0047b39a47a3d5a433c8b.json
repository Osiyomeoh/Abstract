{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Dapp\\\\Abstract\\\\frontend\\\\src\\\\Components\\\\CreateWallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport SmartWalletDeployer from './abi/SmartWalletDeployer.json'; // Importing ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartWalletDeployerAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"; // Replace with your contract's address\n\nconst CreateWallet = () => {\n  _s();\n  const [isWalletConnected, setIsWalletConnected] = useState(false);\n  const [web3Instance, setWeb3Instance] = useState(null);\n  const [newWalletAddress, setNewWalletAddress] = useState(''); // State to store the new wallet address\n\n  const connectWallet = async () => {\n    try {\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      const web3 = new Web3(window.ethereum);\n      setWeb3Instance(web3);\n      setIsWalletConnected(true);\n    } catch (error) {\n      console.error(\"Error connecting to wallet:\", error);\n      alert(\"Failed to connect wallet!\");\n    }\n  };\n  const createWallet = async () => {\n    if (!isWalletConnected) {\n      alert(\"Please connect your wallet first!\");\n      return;\n    }\n    try {\n      const contract = new web3Instance.eth.Contract(SmartWalletDeployer.abi, smartWalletDeployerAddress);\n      const accounts = await web3Instance.eth.getAccounts();\n      const ownerAddress = accounts[0];\n      const salt = Date.now(); // Example salt\n\n      contract.methods.deploySmartWallet(ownerAddress, salt).send({\n        from: ownerAddress\n      }).on('receipt', receipt => {\n        console.log(receipt);\n        //Access the deployed wallet address from the event\n        const deployedAddress = receipt.events.SmartWalletDeployed.returnValues.smartWalletAddress;\n        console.log('Deployed address:', deployedAddress);\n        if (deployedAddress) {\n          setNewWalletAddress(deployedAddress);\n          alert(`New wallet created at address: ${deployedAddress}`);\n        } else {\n          console.error('Wallet address not found in the event');\n        }\n      });\n    } catch (error) {\n      console.error(\"Error creating wallet:\", error);\n      alert(\"Failed to create wallet!\");\n    }\n  };\n\n  // Define the inline CSS for your buttons\n  const buttonStyle = {\n    margin: '10px',\n    padding: '10px 20px',\n    background: 'blue',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isWalletConnected && /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      style: buttonStyle,\n      onClick: createWallet,\n      disabled: !isWalletConnected,\n      children: \"Create New Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this), newWalletAddress && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"New Wallet Address: \", newWalletAddress]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 34\n    }, this), \" \"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateWallet, \"RUU6H5hSoG2Y5VEVd78kJsUZAm8=\");\n_c = CreateWallet;\nexport default CreateWallet;\nvar _c;\n$RefreshReg$(_c, \"CreateWallet\");","map":{"version":3,"names":["React","useState","Web3","SmartWalletDeployer","jsxDEV","_jsxDEV","smartWalletDeployerAddress","CreateWallet","_s","isWalletConnected","setIsWalletConnected","web3Instance","setWeb3Instance","newWalletAddress","setNewWalletAddress","connectWallet","window","ethereum","request","method","web3","error","console","alert","createWallet","contract","eth","Contract","abi","accounts","getAccounts","ownerAddress","salt","Date","now","methods","deploySmartWallet","send","from","on","receipt","log","deployedAddress","events","SmartWalletDeployed","returnValues","smartWalletAddress","buttonStyle","margin","padding","background","color","border","borderRadius","cursor","children","style","onClick","fileName","_jsxFileName","lineNumber","columnNumber","disabled","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Dapp/Abstract/frontend/src/Components/CreateWallet.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Web3 from 'web3';\r\nimport SmartWalletDeployer from './abi/SmartWalletDeployer.json'; // Importing ABI\r\n\r\nconst smartWalletDeployerAddress = \"0x5FbDB2315678afecb367f032d93F642f64180aa3\"; // Replace with your contract's address\r\n\r\nconst CreateWallet = () => {\r\n    const [isWalletConnected, setIsWalletConnected] = useState(false);\r\n    const [web3Instance, setWeb3Instance] = useState(null);\r\n    const [newWalletAddress, setNewWalletAddress] = useState(''); // State to store the new wallet address\r\n\r\n    const connectWallet = async () => {\r\n        try {\r\n            await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            const web3 = new Web3(window.ethereum);\r\n            setWeb3Instance(web3);\r\n            setIsWalletConnected(true);\r\n        } catch (error) {\r\n            console.error(\"Error connecting to wallet:\", error);\r\n            alert(\"Failed to connect wallet!\");\r\n        }\r\n    };\r\n\r\n    const createWallet = async () => {\r\n        if (!isWalletConnected) {\r\n            alert(\"Please connect your wallet first!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const contract = new web3Instance.eth.Contract(\r\n                SmartWalletDeployer.abi,\r\n                smartWalletDeployerAddress\r\n            );\r\n\r\n            const accounts = await web3Instance.eth.getAccounts();\r\n            const ownerAddress = accounts[0];\r\n            const salt = Date.now(); // Example salt\r\n\r\n            contract.methods.deploySmartWallet(ownerAddress, salt).send({ from: ownerAddress })\r\n            .on('receipt', (receipt) => {\r\n                console.log(receipt)\r\n                //Access the deployed wallet address from the event\r\n                const deployedAddress = receipt.events.SmartWalletDeployed.returnValues.smartWalletAddress;\r\n        \r\n                console.log('Deployed address:', deployedAddress);\r\n        \r\n                if (deployedAddress) {\r\n                    setNewWalletAddress(deployedAddress);\r\n                    alert(`New wallet created at address: ${deployedAddress}`);\r\n                } else {\r\n                    console.error('Wallet address not found in the event');\r\n                }\r\n            });\r\n        \r\n        } catch (error) {\r\n            console.error(\"Error creating wallet:\", error);\r\n            alert(\"Failed to create wallet!\");\r\n        }\r\n    };\r\n\r\n    // Define the inline CSS for your buttons\r\n    const buttonStyle = {\r\n        margin: '10px',\r\n        padding: '10px 20px',\r\n        background: 'blue',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isWalletConnected && (\r\n                <button style={buttonStyle} onClick={connectWallet}>Connect Wallet</button>\r\n            )}\r\n            <button style={buttonStyle} onClick={createWallet} disabled={!isWalletConnected}>Create New Wallet</button>\r\n            {newWalletAddress && <p>New Wallet Address: {newWalletAddress}</p>} {/* Display the new wallet address */}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateWallet;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}