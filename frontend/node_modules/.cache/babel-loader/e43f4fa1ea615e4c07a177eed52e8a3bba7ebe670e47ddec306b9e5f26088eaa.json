{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { utils } from 'web3-validator';\nimport { encodeTuple } from './base/index.js';\nimport { toAbiParams } from './utils.js';\nexport function encodeParameters(abi, params) {\n  if (abi.length !== params.length) {\n    throw new AbiError('Invalid number of values received for given ABI', {\n      expected: abi.length,\n      received: params.length\n    });\n  }\n  const abiParams = toAbiParams(abi);\n  return utils.uint8ArrayToHexString(encodeTuple({\n    type: 'tuple',\n    name: '',\n    components: abiParams\n  }, params).encoded);\n}","map":{"version":3,"names":["AbiError","utils","encodeTuple","toAbiParams","encodeParameters","abi","params","length","expected","received","abiParams","uint8ArrayToHexString","type","name","components","encoded"],"sources":["C:\\Users\\USER\\Documents\\Dapp\\Abstract\\frontend\\node_modules\\web3-eth-abi\\src\\coders\\encode.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { AbiError } from 'web3-errors';\nimport { AbiInput } from 'web3-types';\nimport { utils } from 'web3-validator';\nimport { encodeTuple } from './base/index.js';\nimport { toAbiParams } from './utils.js';\n\nexport function encodeParameters(abi: ReadonlyArray<AbiInput>, params: unknown[]): string {\n\tif (abi.length !== params.length) {\n\t\tthrow new AbiError('Invalid number of values received for given ABI', {\n\t\t\texpected: abi.length,\n\t\t\treceived: params.length,\n\t\t});\n\t}\n\tconst abiParams = toAbiParams(abi);\n\treturn utils.uint8ArrayToHexString(\n\t\tencodeTuple({ type: 'tuple', name: '', components: abiParams }, params).encoded,\n\t);\n}\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAgBA,SAASA,QAAQ,QAAQ,aAAa;AAEtC,SAASC,KAAK,QAAQ,gBAAgB;AACtC,SAASC,WAAW,QAAQ,iBAAiB;AAC7C,SAASC,WAAW,QAAQ,YAAY;AAExC,OAAM,SAAUC,gBAAgBA,CAACC,GAA4B,EAAEC,MAAiB;EAC/E,IAAID,GAAG,CAACE,MAAM,KAAKD,MAAM,CAACC,MAAM,EAAE;IACjC,MAAM,IAAIP,QAAQ,CAAC,iDAAiD,EAAE;MACrEQ,QAAQ,EAAEH,GAAG,CAACE,MAAM;MACpBE,QAAQ,EAAEH,MAAM,CAACC;KACjB,CAAC;;EAEH,MAAMG,SAAS,GAAGP,WAAW,CAACE,GAAG,CAAC;EAClC,OAAOJ,KAAK,CAACU,qBAAqB,CACjCT,WAAW,CAAC;IAAEU,IAAI,EAAE,OAAO;IAAEC,IAAI,EAAE,EAAE;IAAEC,UAAU,EAAEJ;EAAS,CAAE,EAAEJ,MAAM,CAAC,CAACS,OAAO,CAC/E;AACF"},"metadata":{},"sourceType":"module","externalDependencies":[]}