{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Dapp\\\\Abstract\\\\frontend\\\\src\\\\Components\\\\CreateWallet.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { ethers } from 'ethers';\nimport SmartWalletDeployerABI from './abi/SmartWalletDeployer.json'; // Importing ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartWalletDeployerAddress = \"0xf3495e3f6F38DDb5874944c18247dF3708880450\"; // Replace with your contract's address\n\nconst CreateWallet = () => {\n  _s();\n  const [isWalletConnected, setIsWalletConnected] = useState(false);\n  const connectWallet = async () => {\n    try {\n      await window.ethereum.request({\n        method: 'eth_requestAccounts'\n      });\n      setIsWalletConnected(true);\n    } catch (error) {\n      console.error(\"Error connecting to wallet:\", error);\n      alert(\"Failed to connect wallet!\");\n    }\n  };\n  const createWallet = async () => {\n    if (!isWalletConnected) {\n      alert(\"Please connect your wallet first!\");\n      return;\n    }\n    try {\n      // Connect to Ethereum network\n      const provider = new ethers.providers.Web3Provider(window.ethereum);\n      const signer = provider.getSigner();\n\n      // Connect to your SmartWalletDeployer contract\n      const contract = new ethers.Contract(smartWalletDeployerAddress, SmartWalletDeployerABI.abi,\n      // Use the ABI from the imported JSON\n      signer);\n\n      // Example values for contract function\n      const ownerAddress = await signer.getAddress();\n      const salt = Date.now(); // Example salt\n\n      // Send transaction to create a new wallet\n      const tx = await contract.deploySmartWallet(ownerAddress, salt);\n      await tx.wait();\n      alert(\"New wallet created!\");\n    } catch (error) {\n      console.error(\"Error creating wallet:\", error);\n      alert(\"Failed to create wallet!\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [!isWalletConnected && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: connectWallet,\n      children: \"Connect Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createWallet,\n      children: \"Create New Wallet\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(CreateWallet, \"KB+hNx0VNmX4RKtj3BITLvJzRuQ=\");\n_c = CreateWallet;\nexport default CreateWallet;\nvar _c;\n$RefreshReg$(_c, \"CreateWallet\");","map":{"version":3,"names":["React","useState","ethers","SmartWalletDeployerABI","jsxDEV","_jsxDEV","smartWalletDeployerAddress","CreateWallet","_s","isWalletConnected","setIsWalletConnected","connectWallet","window","ethereum","request","method","error","console","alert","createWallet","provider","providers","Web3Provider","signer","getSigner","contract","Contract","abi","ownerAddress","getAddress","salt","Date","now","tx","deploySmartWallet","wait","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Dapp/Abstract/frontend/src/Components/CreateWallet.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { ethers } from 'ethers';\r\nimport SmartWalletDeployerABI from './abi/SmartWalletDeployer.json'; // Importing ABI\r\n\r\nconst smartWalletDeployerAddress = \"0xf3495e3f6F38DDb5874944c18247dF3708880450\"; // Replace with your contract's address\r\n\r\nconst CreateWallet = () => {\r\n    const [isWalletConnected, setIsWalletConnected] = useState(false);\r\n\r\n    const connectWallet = async () => {\r\n        try {\r\n            await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n            setIsWalletConnected(true);\r\n        } catch (error) {\r\n            console.error(\"Error connecting to wallet:\", error);\r\n            alert(\"Failed to connect wallet!\");\r\n        }\r\n    };\r\n\r\n    const createWallet = async () => {\r\n        if (!isWalletConnected) {\r\n            alert(\"Please connect your wallet first!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Connect to Ethereum network\r\n            const provider = new ethers.providers.Web3Provider(window.ethereum);\r\n            const signer = provider.getSigner();\r\n\r\n            // Connect to your SmartWalletDeployer contract\r\n            const contract = new ethers.Contract(\r\n                smartWalletDeployerAddress,\r\n                SmartWalletDeployerABI.abi, // Use the ABI from the imported JSON\r\n                signer\r\n            );\r\n\r\n            // Example values for contract function\r\n            const ownerAddress = await signer.getAddress();\r\n            const salt = Date.now(); // Example salt\r\n\r\n            // Send transaction to create a new wallet\r\n            const tx = await contract.deploySmartWallet(ownerAddress, salt);\r\n            await tx.wait();\r\n            alert(\"New wallet created!\");\r\n        } catch (error) {\r\n            console.error(\"Error creating wallet:\", error);\r\n            alert(\"Failed to create wallet!\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {!isWalletConnected && (\r\n                <button onClick={connectWallet}>Connect Wallet</button>\r\n            )}\r\n            <button onClick={createWallet}>Create New Wallet</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default CreateWallet;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,QAAQ;AAC/B,OAAOC,sBAAsB,MAAM,gCAAgC,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErE,MAAMC,0BAA0B,GAAG,4CAA4C,CAAC,CAAC;;AAEjF,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,iBAAiB,EAAEC,oBAAoB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAEjE,MAAMU,aAAa,GAAG,MAAAA,CAAA,KAAY;IAC9B,IAAI;MACA,MAAMC,MAAM,CAACC,QAAQ,CAACC,OAAO,CAAC;QAAEC,MAAM,EAAE;MAAsB,CAAC,CAAC;MAChEL,oBAAoB,CAAC,IAAI,CAAC;IAC9B,CAAC,CAAC,OAAOM,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,6BAA6B,EAAEA,KAAK,CAAC;MACnDE,KAAK,CAAC,2BAA2B,CAAC;IACtC;EACJ,CAAC;EAED,MAAMC,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACV,iBAAiB,EAAE;MACpBS,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACJ;IAEA,IAAI;MACA;MACA,MAAME,QAAQ,GAAG,IAAIlB,MAAM,CAACmB,SAAS,CAACC,YAAY,CAACV,MAAM,CAACC,QAAQ,CAAC;MACnE,MAAMU,MAAM,GAAGH,QAAQ,CAACI,SAAS,CAAC,CAAC;;MAEnC;MACA,MAAMC,QAAQ,GAAG,IAAIvB,MAAM,CAACwB,QAAQ,CAChCpB,0BAA0B,EAC1BH,sBAAsB,CAACwB,GAAG;MAAE;MAC5BJ,MACJ,CAAC;;MAED;MACA,MAAMK,YAAY,GAAG,MAAML,MAAM,CAACM,UAAU,CAAC,CAAC;MAC9C,MAAMC,IAAI,GAAGC,IAAI,CAACC,GAAG,CAAC,CAAC,CAAC,CAAC;;MAEzB;MACA,MAAMC,EAAE,GAAG,MAAMR,QAAQ,CAACS,iBAAiB,CAACN,YAAY,EAAEE,IAAI,CAAC;MAC/D,MAAMG,EAAE,CAACE,IAAI,CAAC,CAAC;MACfjB,KAAK,CAAC,qBAAqB,CAAC;IAChC,CAAC,CAAC,OAAOF,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,wBAAwB,EAAEA,KAAK,CAAC;MAC9CE,KAAK,CAAC,0BAA0B,CAAC;IACrC;EACJ,CAAC;EAED,oBACIb,OAAA;IAAA+B,QAAA,GACK,CAAC3B,iBAAiB,iBACfJ,OAAA;MAAQgC,OAAO,EAAE1B,aAAc;MAAAyB,QAAA,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CACzD,eACDpC,OAAA;MAAQgC,OAAO,EAAElB,YAAa;MAAAiB,QAAA,EAAC;IAAiB;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxD,CAAC;AAEd,CAAC;AAACjC,EAAA,CArDID,YAAY;AAAAmC,EAAA,GAAZnC,YAAY;AAuDlB,eAAeA,YAAY;AAAC,IAAAmC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}