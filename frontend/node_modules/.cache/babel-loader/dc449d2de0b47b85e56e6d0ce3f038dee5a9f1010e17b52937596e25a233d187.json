{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport var FMT_NUMBER;\n(function (FMT_NUMBER) {\n  FMT_NUMBER[\"NUMBER\"] = \"NUMBER_NUMBER\";\n  FMT_NUMBER[\"HEX\"] = \"NUMBER_HEX\";\n  FMT_NUMBER[\"STR\"] = \"NUMBER_STR\";\n  FMT_NUMBER[\"BIGINT\"] = \"NUMBER_BIGINT\";\n})(FMT_NUMBER || (FMT_NUMBER = {}));\nexport var FMT_BYTES;\n(function (FMT_BYTES) {\n  FMT_BYTES[\"HEX\"] = \"BYTES_HEX\";\n  FMT_BYTES[\"UINT8ARRAY\"] = \"BYTES_UINT8ARRAY\";\n})(FMT_BYTES || (FMT_BYTES = {}));\nexport const DEFAULT_RETURN_FORMAT = {\n  number: FMT_NUMBER.BIGINT,\n  bytes: FMT_BYTES.HEX\n};\nexport const ETH_DATA_FORMAT = {\n  number: FMT_NUMBER.HEX,\n  bytes: FMT_BYTES.HEX\n};","map":{"version":3,"names":["FMT_NUMBER","FMT_BYTES","DEFAULT_RETURN_FORMAT","number","BIGINT","bytes","HEX","ETH_DATA_FORMAT"],"sources":["C:\\Users\\USER\\Documents\\Dapp\\Abstract\\frontend\\node_modules\\web3-types\\src\\data_format_types.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n\nimport { Bytes, HexString, Numbers } from './primitives_types.js';\n\nexport enum FMT_NUMBER {\n\tNUMBER = 'NUMBER_NUMBER',\n\tHEX = 'NUMBER_HEX',\n\tSTR = 'NUMBER_STR',\n\tBIGINT = 'NUMBER_BIGINT',\n}\n\nexport type NumberTypes = {\n\t[FMT_NUMBER.NUMBER]: number;\n\t[FMT_NUMBER.HEX]: HexString;\n\t[FMT_NUMBER.STR]: string;\n\t[FMT_NUMBER.BIGINT]: bigint;\n};\n\nexport enum FMT_BYTES {\n\tHEX = 'BYTES_HEX',\n\tUINT8ARRAY = 'BYTES_UINT8ARRAY',\n}\n\nexport type ByteTypes = {\n\t[FMT_BYTES.HEX]: HexString;\n\t[FMT_BYTES.UINT8ARRAY]: Uint8Array;\n};\n\nexport type DataFormat = {\n\treadonly number: FMT_NUMBER;\n\treadonly bytes: FMT_BYTES;\n};\n\nexport const DEFAULT_RETURN_FORMAT = { number: FMT_NUMBER.BIGINT, bytes: FMT_BYTES.HEX } as const;\nexport const ETH_DATA_FORMAT = { number: FMT_NUMBER.HEX, bytes: FMT_BYTES.HEX } as const;\n\nexport type FormatType<T, F extends DataFormat> = number extends Extract<T, Numbers>\n\t? NumberTypes[F['number']] | Exclude<T, Numbers>\n\t: Uint8Array extends Extract<T, Bytes>\n\t? ByteTypes[F['bytes']] | Exclude<T, Bytes>\n\t: T extends object | undefined\n\t? {\n\t\t\t[P in keyof T]: FormatType<T[P], F>;\n\t  }\n\t: T;\n"],"mappings":"AAAA;;;;;;;;;;;;;;;;AAmBA,WAAYA,UAKX;AALD,WAAYA,UAAU;EACrBA,UAAA,4BAAwB;EACxBA,UAAA,sBAAkB;EAClBA,UAAA,sBAAkB;EAClBA,UAAA,4BAAwB;AACzB,CAAC,EALWA,UAAU,KAAVA,UAAU;AActB,WAAYC,SAGX;AAHD,WAAYA,SAAS;EACpBA,SAAA,qBAAiB;EACjBA,SAAA,mCAA+B;AAChC,CAAC,EAHWA,SAAS,KAATA,SAAS;AAerB,OAAO,MAAMC,qBAAqB,GAAG;EAAEC,MAAM,EAAEH,UAAU,CAACI,MAAM;EAAEC,KAAK,EAAEJ,SAAS,CAACK;AAAG,CAAW;AACjG,OAAO,MAAMC,eAAe,GAAG;EAAEJ,MAAM,EAAEH,UAAU,CAACM,GAAG;EAAED,KAAK,EAAEJ,SAAS,CAACK;AAAG,CAAW"},"metadata":{},"sourceType":"module","externalDependencies":[]}