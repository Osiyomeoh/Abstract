{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Dapp\\\\Abstract\\\\frontend\\\\src\\\\Components\\\\depositFunds.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport SmartWalletABI from './abi/SmartWallet.json'; // Importing ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartWalletAddress = \"0xf3495e3f6F38DDb5874944c18247dF3708880450\"; // Replace with your contract's address\n\nconst DepositFunds = () => {\n  _s();\n  const [depositAmount, setDepositAmount] = useState('');\n  const depositFunds = async () => {\n    if (!isWalletConnected) {\n      alert(\"Please connect your wallet first!\");\n      return;\n    }\n    if (!depositAmount || isNaN(depositAmount)) {\n      alert(\"Please enter a valid deposit amount.\");\n      return;\n    }\n    try {\n      // Convert the deposit amount to wei\n      const depositAmountWei = web3Instance.utils.toWei(depositAmount, 'ether');\n\n      // Connect to your SmartWallet contract\n      const contract = new web3Instance.eth.Contract(SmartWalletABI.abi, smartWalletAddress);\n\n      // Example: Get the user's address\n      const accounts = await web3Instance.eth.getAccounts();\n      const userAddress = accounts[0];\n\n      // Send the deposit transaction\n      await contract.methods.deposit().send({\n        from: userAddress,\n        value: depositAmountWei\n      });\n      alert(`Successfully deposited ${depositAmount} Ether.`);\n    } catch (error) {\n      console.error(\"Error depositing funds:\", error);\n      alert(\"Failed to deposit funds. Check the console for more details.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: isWalletConnected && /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        value: depositAmount,\n        onChange: e => setDepositAmount(e.target.value),\n        placeholder: \"Enter deposit amount in Ether\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 21\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: depositFunds,\n        children: \"Deposit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 17\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 9\n  }, this);\n};\n_s(DepositFunds, \"6T8YZa8NL+zFtceWP0kax34sSuU=\");\n_c = DepositFunds;\nexport default DepositFunds;\nvar _c;\n$RefreshReg$(_c, \"DepositFunds\");","map":{"version":3,"names":["React","useState","Web3","SmartWalletABI","jsxDEV","_jsxDEV","smartWalletAddress","DepositFunds","_s","depositAmount","setDepositAmount","depositFunds","isWalletConnected","alert","isNaN","depositAmountWei","web3Instance","utils","toWei","contract","eth","Contract","abi","accounts","getAccounts","userAddress","methods","deposit","send","from","value","error","console","children","type","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Dapp/Abstract/frontend/src/Components/depositFunds.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Web3 from 'web3';\r\nimport SmartWalletABI from './abi/SmartWallet.json'; // Importing ABI\r\n\r\nconst smartWalletAddress = \"0xf3495e3f6F38DDb5874944c18247dF3708880450\"; // Replace with your contract's address\r\n\r\nconst DepositFunds = () => {\r\n    \r\n    \r\n    const [depositAmount, setDepositAmount] = useState('');\r\n    \r\n   \r\n\r\n    const depositFunds = async () => {\r\n        if (!isWalletConnected) {\r\n            alert(\"Please connect your wallet first!\");\r\n            return;\r\n        }\r\n\r\n        if (!depositAmount || isNaN(depositAmount)) {\r\n            alert(\"Please enter a valid deposit amount.\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            // Convert the deposit amount to wei\r\n            const depositAmountWei = web3Instance.utils.toWei(depositAmount, 'ether');\r\n\r\n            // Connect to your SmartWallet contract\r\n            const contract = new web3Instance.eth.Contract(\r\n                SmartWalletABI.abi,\r\n                smartWalletAddress\r\n            );\r\n\r\n            // Example: Get the user's address\r\n            const accounts = await web3Instance.eth.getAccounts();\r\n            const userAddress = accounts[0];\r\n\r\n            // Send the deposit transaction\r\n            await contract.methods.deposit().send({\r\n                from: userAddress,\r\n                value: depositAmountWei,\r\n            });\r\n\r\n            alert(`Successfully deposited ${depositAmount} Ether.`);\r\n        } catch (error) {\r\n            console.error(\"Error depositing funds:\", error);\r\n            alert(\"Failed to deposit funds. Check the console for more details.\");\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            {isWalletConnected && (\r\n                <div>\r\n                    <input\r\n                        type=\"text\"\r\n                        value={depositAmount}\r\n                        onChange={(e) => setDepositAmount(e.target.value)}\r\n                        placeholder=\"Enter deposit amount in Ether\"\r\n                    />\r\n                    <button onClick={depositFunds}>Deposit</button>\r\n                </div>\r\n            )}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default DepositFunds;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,cAAc,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,kBAAkB,GAAG,4CAA4C,CAAC,CAAC;;AAEzE,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAGvB,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAItD,MAAMU,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI,CAACC,iBAAiB,EAAE;MACpBC,KAAK,CAAC,mCAAmC,CAAC;MAC1C;IACJ;IAEA,IAAI,CAACJ,aAAa,IAAIK,KAAK,CAACL,aAAa,CAAC,EAAE;MACxCI,KAAK,CAAC,sCAAsC,CAAC;MAC7C;IACJ;IAEA,IAAI;MACA;MACA,MAAME,gBAAgB,GAAGC,YAAY,CAACC,KAAK,CAACC,KAAK,CAACT,aAAa,EAAE,OAAO,CAAC;;MAEzE;MACA,MAAMU,QAAQ,GAAG,IAAIH,YAAY,CAACI,GAAG,CAACC,QAAQ,CAC1ClB,cAAc,CAACmB,GAAG,EAClBhB,kBACJ,CAAC;;MAED;MACA,MAAMiB,QAAQ,GAAG,MAAMP,YAAY,CAACI,GAAG,CAACI,WAAW,CAAC,CAAC;MACrD,MAAMC,WAAW,GAAGF,QAAQ,CAAC,CAAC,CAAC;;MAE/B;MACA,MAAMJ,QAAQ,CAACO,OAAO,CAACC,OAAO,CAAC,CAAC,CAACC,IAAI,CAAC;QAClCC,IAAI,EAAEJ,WAAW;QACjBK,KAAK,EAAEf;MACX,CAAC,CAAC;MAEFF,KAAK,CAAE,0BAAyBJ,aAAc,SAAQ,CAAC;IAC3D,CAAC,CAAC,OAAOsB,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/ClB,KAAK,CAAC,8DAA8D,CAAC;IACzE;EACJ,CAAC;EAED,oBACIR,OAAA;IAAA4B,QAAA,EACKrB,iBAAiB,iBACdP,OAAA;MAAA4B,QAAA,gBACI5B,OAAA;QACI6B,IAAI,EAAC,MAAM;QACXJ,KAAK,EAAErB,aAAc;QACrB0B,QAAQ,EAAGC,CAAC,IAAK1B,gBAAgB,CAAC0B,CAAC,CAACC,MAAM,CAACP,KAAK,CAAE;QAClDQ,WAAW,EAAC;MAA+B;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC9C,CAAC,eACFrC,OAAA;QAAQsC,OAAO,EAAEhC,YAAa;QAAAsB,QAAA,EAAC;MAAO;QAAAM,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAQ,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC9C;EACR;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACA,CAAC;AAEd,CAAC;AAAClC,EAAA,CA5DID,YAAY;AAAAqC,EAAA,GAAZrC,YAAY;AA8DlB,eAAeA,YAAY;AAAC,IAAAqC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}