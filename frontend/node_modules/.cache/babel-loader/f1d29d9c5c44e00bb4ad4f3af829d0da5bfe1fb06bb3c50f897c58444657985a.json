{"ast":null,"code":"export {};","map":{"version":3,"names":[],"sources":["C:\\Users\\USER\\Documents\\Dapp\\Abstract\\frontend\\node_modules\\web3-types\\src\\json_rpc_types.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nexport type JsonRpcId = string | number | undefined;\nexport type JsonRpcResult = string | number | boolean | Record<string, unknown>;\nexport type JsonRpcIdentifier = string & ('2.0' | '1.0');\n\nexport interface JsonRpcError<T = JsonRpcResult> {\n\treadonly code: number;\n\treadonly message: string;\n\treadonly data?: T;\n}\n\nexport interface JsonRpcResponseWithError<Error = JsonRpcResult> {\n\treadonly id: JsonRpcId;\n\treadonly jsonrpc: JsonRpcIdentifier;\n\treadonly error: JsonRpcError<Error>;\n\treadonly result?: never;\n}\n\nexport interface JsonRpcResponseWithResult<T = JsonRpcResult> {\n\treadonly id: JsonRpcId;\n\treadonly jsonrpc: JsonRpcIdentifier;\n\treadonly error?: never;\n\treadonly result: T;\n}\n\nexport interface SubscriptionParams<T = JsonRpcResult> {\n\treadonly subscription: string; // for subscription id\n\treadonly result: T;\n}\n\nexport interface JsonRpcSubscriptionResultOld<T = JsonRpcResult> {\n\treadonly error?: never;\n\treadonly params?: never;\n\treadonly type: string;\n\treadonly data: SubscriptionParams<T>;\n}\n\nexport interface JsonRpcNotification<T = JsonRpcResult> {\n\treadonly id?: JsonRpcId;\n\treadonly jsonrpc: JsonRpcIdentifier;\n\treadonly method: string; // for subscription\n\treadonly params: SubscriptionParams<T>; // for subscription results\n\treadonly result: never;\n\treadonly data?: never;\n}\n\nexport interface JsonRpcSubscriptionResult {\n\treadonly id: number;\n\treadonly jsonrpc: string;\n\treadonly result: string;\n\treadonly method: never;\n\treadonly params: never;\n\treadonly data?: never;\n}\n\nexport interface JsonRpcRequest<T = unknown[]> {\n\treadonly id: JsonRpcId;\n\treadonly jsonrpc: JsonRpcIdentifier;\n\treadonly method: string;\n\treadonly params?: T;\n}\n\nexport interface JsonRpcOptionalRequest<ParamType = unknown[]>\n\textends Omit<JsonRpcRequest<ParamType>, 'id' | 'jsonrpc'> {\n\treadonly id?: JsonRpcId;\n\treadonly jsonrpc?: JsonRpcIdentifier;\n}\n\nexport type JsonRpcBatchRequest = JsonRpcRequest[];\n\nexport type JsonRpcPayload<Param = unknown[]> = JsonRpcRequest<Param> | JsonRpcBatchRequest;\n\nexport type JsonRpcBatchResponse<Result = JsonRpcResult, Error = JsonRpcResult> =\n\t| (JsonRpcResponseWithError<Error> | JsonRpcResponseWithResult<Result>)[];\n\nexport type JsonRpcResponse<Result = JsonRpcResult, Error = JsonRpcResult> =\n\t| JsonRpcResponseWithError<Error>\n\t| JsonRpcResponseWithResult<Result>\n\t| JsonRpcBatchResponse<Result, Error>;\n"],"mappings":""},"metadata":{},"sourceType":"module","externalDependencies":[]}