{"ast":null,"code":"/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport { Web3Context, isSupportedProvider } from 'web3-core';\nimport { Web3Eth, registeredSubscriptions } from 'web3-eth';\nimport Contract from 'web3-eth-contract';\nimport { ENS, registryAddresses } from 'web3-eth-ens';\nimport { Iban } from 'web3-eth-iban';\nimport { Personal } from 'web3-eth-personal';\nimport { Net } from 'web3-net';\nimport * as utils from 'web3-utils';\nimport { isNullish, isDataFormat, isContractInitOptions } from 'web3-utils';\nimport { DEFAULT_RETURN_FORMAT } from 'web3-types';\nimport { InvalidMethodParamsError } from 'web3-errors';\nimport abi from './abi.js';\nimport { initAccountsForContext } from './accounts.js';\nimport { Web3PkgInfo } from './version.js';\nexport class Web3 extends Web3Context {\n  constructor(providerOrContext) {\n    var _a;\n    if (isNullish(providerOrContext) || typeof providerOrContext === 'string' && providerOrContext.trim() === '' || typeof providerOrContext !== 'string' && !isSupportedProvider(providerOrContext) && !providerOrContext.provider) {\n      console.warn('NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!');\n    }\n    let contextInitOptions = {};\n    if (typeof providerOrContext === 'string' || isSupportedProvider(providerOrContext)) {\n      contextInitOptions.provider = providerOrContext;\n    } else if (providerOrContext) {\n      contextInitOptions = providerOrContext;\n    } else {\n      contextInitOptions = {};\n    }\n    contextInitOptions.registeredSubscriptions = Object.assign(Object.assign({}, registeredSubscriptions), (_a = contextInitOptions.registeredSubscriptions) !== null && _a !== void 0 ? _a : {});\n    super(contextInitOptions);\n    const accounts = initAccountsForContext(this);\n    // Init protected properties\n    this._wallet = accounts.wallet;\n    this._accountProvider = accounts;\n    this.utils = utils;\n    // Have to use local alias to initiate contract context\n    // eslint-disable-next-line @typescript-eslint/no-this-alias\n    const self = this;\n    class ContractBuilder extends Contract {\n      constructor(jsonInterface, addressOrOptionsOrContext, optionsOrContextOrReturnFormat, contextOrReturnFormat, returnFormat) {\n        if (isContractInitOptions(addressOrOptionsOrContext) && isContractInitOptions(optionsOrContextOrReturnFormat)) {\n          throw new InvalidMethodParamsError('Should not provide options at both 2nd and 3rd parameters');\n        }\n        let address;\n        let options = {};\n        let context;\n        let dataFormat = DEFAULT_RETURN_FORMAT;\n        // add validation so its not a breaking change\n        if (!isNullish(addressOrOptionsOrContext) && typeof addressOrOptionsOrContext !== 'object' && typeof addressOrOptionsOrContext !== 'string') {\n          throw new InvalidMethodParamsError();\n        }\n        if (typeof addressOrOptionsOrContext === 'string') {\n          address = addressOrOptionsOrContext;\n        }\n        if (isContractInitOptions(addressOrOptionsOrContext)) {\n          options = addressOrOptionsOrContext;\n        } else if (isContractInitOptions(optionsOrContextOrReturnFormat)) {\n          options = optionsOrContextOrReturnFormat;\n        } else {\n          options = {};\n        }\n        if (addressOrOptionsOrContext instanceof Web3Context) {\n          context = addressOrOptionsOrContext;\n        } else if (optionsOrContextOrReturnFormat instanceof Web3Context) {\n          context = optionsOrContextOrReturnFormat;\n        } else if (contextOrReturnFormat instanceof Web3Context) {\n          context = contextOrReturnFormat;\n        } else {\n          context = self.getContextObject();\n        }\n        if (returnFormat) {\n          dataFormat = returnFormat;\n        } else if (isDataFormat(optionsOrContextOrReturnFormat)) {\n          dataFormat = optionsOrContextOrReturnFormat;\n        } else if (isDataFormat(contextOrReturnFormat)) {\n          dataFormat = contextOrReturnFormat;\n        }\n        super(jsonInterface, address, options, context, dataFormat);\n        super.subscribeToContextEvents(self);\n      }\n    }\n    const eth = self.use(Web3Eth);\n    // Eth Module\n    this.eth = Object.assign(eth, {\n      // ENS module\n      ens: self.use(ENS, registryAddresses.main),\n      // Iban helpers\n      Iban,\n      net: self.use(Net),\n      personal: self.use(Personal),\n      // Contract helper and module\n      Contract: ContractBuilder,\n      // ABI Helpers\n      abi,\n      // Accounts helper\n      accounts\n    });\n  }\n}\nWeb3.version = Web3PkgInfo.version;\nWeb3.utils = utils;\nWeb3.modules = {\n  Web3Eth,\n  Iban,\n  Net,\n  ENS,\n  Personal\n};\nexport default Web3;","map":{"version":3,"names":["Web3Context","isSupportedProvider","Web3Eth","registeredSubscriptions","Contract","ENS","registryAddresses","Iban","Personal","Net","utils","isNullish","isDataFormat","isContractInitOptions","DEFAULT_RETURN_FORMAT","InvalidMethodParamsError","abi","initAccountsForContext","Web3PkgInfo","Web3","constructor","providerOrContext","trim","provider","console","warn","contextInitOptions","Object","assign","_a","accounts","_wallet","wallet","_accountProvider","self","ContractBuilder","jsonInterface","addressOrOptionsOrContext","optionsOrContextOrReturnFormat","contextOrReturnFormat","returnFormat","address","options","context","dataFormat","getContextObject","subscribeToContextEvents","eth","use","ens","main","net","personal","version","modules"],"sources":["C:\\Users\\USER\\Documents\\Dapp\\Abstract\\frontend\\node_modules\\web3\\src\\web3.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\n// eslint-disable-next-line max-classes-per-file\nimport {\n\tWeb3Context,\n\tWeb3ContextInitOptions,\n\tWeb3ContextObject,\n\tWeb3SubscriptionConstructor,\n\tisSupportedProvider\n} from 'web3-core';\nimport { Web3Eth, RegisteredSubscription, registeredSubscriptions } from 'web3-eth';\nimport Contract from 'web3-eth-contract';\nimport { ENS, registryAddresses } from 'web3-eth-ens';\nimport { Iban } from 'web3-eth-iban';\nimport { Personal } from 'web3-eth-personal';\nimport { Net } from 'web3-net';\nimport * as utils from 'web3-utils';\nimport { isNullish, isDataFormat, isContractInitOptions } from 'web3-utils';\nimport {\n\tAddress,\n\tContractAbi,\n\tContractInitOptions,\n\tEthExecutionAPI,\n\tSupportedProviders,\n\tDataFormat,\n\tDEFAULT_RETURN_FORMAT\n} from 'web3-types';\nimport { InvalidMethodParamsError } from 'web3-errors';\nimport abi from './abi.js';\nimport { initAccountsForContext } from './accounts.js';\nimport { Web3EthInterface } from './types.js';\nimport { Web3PkgInfo } from './version.js';\n\nexport class Web3<\n\tCustomRegisteredSubscription extends {\n\t\t[key: string]: Web3SubscriptionConstructor<EthExecutionAPI>;\n\t} = RegisteredSubscription,\n> extends Web3Context<EthExecutionAPI, CustomRegisteredSubscription & RegisteredSubscription> {\n\tpublic static version = Web3PkgInfo.version;\n\tpublic static utils = utils;\n\tpublic static modules = {\n\t\tWeb3Eth,\n\t\tIban,\n\t\tNet,\n\t\tENS,\n\t\tPersonal,\n\t};\n\n\tpublic utils: typeof utils;\n\n\tpublic eth: Web3EthInterface;\n\n\tpublic constructor(\n\t\tproviderOrContext?:\n\t\t\t| string\n\t\t\t| SupportedProviders<EthExecutionAPI>\n\t\t\t| Web3ContextInitOptions<EthExecutionAPI, CustomRegisteredSubscription>,\n\t) {\n\t\tif (\n\t\t\tisNullish(providerOrContext) ||\n\t\t\t(typeof providerOrContext === 'string' && providerOrContext.trim() === '') ||\n\t\t\t(typeof providerOrContext !== 'string' &&\n\t\t\t\t!isSupportedProvider(providerOrContext as SupportedProviders<EthExecutionAPI>) &&\n\t\t\t\t!(providerOrContext as Web3ContextInitOptions).provider)\n\t\t) {\n\t\t\tconsole.warn(\n\t\t\t\t'NOTE: web3.js is running without provider. You need to pass a provider in order to interact with the network!',\n\t\t\t);\n\t\t}\n\n\t\tlet contextInitOptions: Web3ContextInitOptions<EthExecutionAPI> = {};\n\t\tif (\n\t\t\ttypeof providerOrContext === 'string' ||\n\t\t\tisSupportedProvider(providerOrContext as SupportedProviders)\n\t\t) {\n\t\t\tcontextInitOptions.provider = providerOrContext as\n\t\t\t\t| undefined\n\t\t\t\t| string\n\t\t\t\t| SupportedProviders;\n\t\t} else if (providerOrContext) {\n\t\t\tcontextInitOptions = providerOrContext as Web3ContextInitOptions;\n\t\t} else {\n\t\t\tcontextInitOptions = {};\n\t\t}\n\n\t\tcontextInitOptions.registeredSubscriptions = {\n\t\t\t// all the Eth standard subscriptions\n\t\t\t...registeredSubscriptions,\n\t\t\t// overridden and combined with any custom subscriptions\n\t\t\t...(contextInitOptions.registeredSubscriptions ?? {}),\n\t\t} as CustomRegisteredSubscription;\n\n\t\tsuper(contextInitOptions);\n\t\tconst accounts = initAccountsForContext(this);\n\n\t\t// Init protected properties\n\t\tthis._wallet = accounts.wallet;\n\t\tthis._accountProvider = accounts;\n\n\t\tthis.utils = utils;\n\n\t\t// Have to use local alias to initiate contract context\n\t\t// eslint-disable-next-line @typescript-eslint/no-this-alias\n\t\tconst self = this;\n\n\t\tclass ContractBuilder<Abi extends ContractAbi> extends Contract<Abi> {\n\t\t\tpublic constructor(jsonInterface: Abi);\n\t\t\tpublic constructor(jsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions | Web3Context,\n\t\t\t\t);\n\t\t\tpublic constructor(\n\t\t\t\tjsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions | Web3Context,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions | Web3Context | DataFormat,\n\t\t\t);\n\t\t\tpublic constructor(jsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions,\n\t\t\t\tcontextOrReturnFormat?: Web3Context | DataFormat,\n\t\t\t\t);\n\t\t\tpublic constructor(jsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions,\n\t\t\t\tcontextOrReturnFormat?: Web3Context | DataFormat,\n\t\t\t\t);\n\t\t\tpublic constructor(jsonInterface: Abi,\n\t\t\t\taddressOrOptionsOrContext?: Address | ContractInitOptions,\n\t\t\t\toptionsOrContextOrReturnFormat?: ContractInitOptions,\n\t\t\t\tcontextOrReturnFormat?: Web3Context | DataFormat,\n\t\t\t\treturnFormat?: DataFormat\n\t\t\t\t)\n\t\t\t\t  {\n\t\t\t\tif (isContractInitOptions(addressOrOptionsOrContext) && isContractInitOptions(optionsOrContextOrReturnFormat)) {\n\t\t\t\t\tthrow new InvalidMethodParamsError(\n\t\t\t\t\t\t'Should not provide options at both 2nd and 3rd parameters',\n\t\t\t\t\t);\n\t\t\t\t}\n\t\t\t\tlet address: string | undefined;\n\t\t\t\tlet options: object = {};\n\t\t\t\tlet context: Web3ContextObject;\n\t\t\t\tlet dataFormat: DataFormat = DEFAULT_RETURN_FORMAT;\n\n\t\t\t\t// add validation so its not a breaking change\n\t\t\t\tif (!isNullish(addressOrOptionsOrContext) && typeof addressOrOptionsOrContext !== 'object' && typeof addressOrOptionsOrContext !== 'string') {\n\t\t\t\t\tthrow new InvalidMethodParamsError();\n\t\t\t\t}\n\n\t\t\t\tif (typeof addressOrOptionsOrContext === 'string') {\n\t\t\t\t\taddress = addressOrOptionsOrContext;\n\t\t\t\t}\n\t\t\t\tif (isContractInitOptions(addressOrOptionsOrContext)){\n\t\t\t\t\toptions = addressOrOptionsOrContext as object;\n\t\t\t\t} else if (isContractInitOptions(optionsOrContextOrReturnFormat)) {\n\t\t\t\t\toptions = optionsOrContextOrReturnFormat as object;\n\t\t\t\t} else {\n\t\t\t\t\toptions = {}\n\t\t\t\t}\n\n\t\t\t\tif (addressOrOptionsOrContext instanceof Web3Context) {\n\t\t\t\t\tcontext = addressOrOptionsOrContext;\n\t\t\t\t} else if (optionsOrContextOrReturnFormat instanceof Web3Context) {\n\t\t\t\t\tcontext = optionsOrContextOrReturnFormat;\n\t\t\t\t} else if (contextOrReturnFormat instanceof Web3Context) {\n\t\t\t\t\tcontext = contextOrReturnFormat;\n\t\t\t\t} else {\n\t\t\t\t\tcontext = self.getContextObject() as Web3ContextObject;\n\t\t\t\t}\n\n\t\t\t\tif (returnFormat){\n\t\t\t\t\tdataFormat = returnFormat;\n\t\t\t\t} else if (isDataFormat(optionsOrContextOrReturnFormat)) {\n\t\t\t\t\tdataFormat = optionsOrContextOrReturnFormat as DataFormat;\n\t\t\t\t} else if (isDataFormat(contextOrReturnFormat)) {\n\t\t\t\t\tdataFormat = contextOrReturnFormat;\n\t\t\t\t}\n\n\t\t\t\tsuper(jsonInterface,address, options, context, dataFormat)\n\t\t\t\tsuper.subscribeToContextEvents(self);\n\t\t\t}\n\t\t}\n\n\t\tconst eth = self.use(Web3Eth);\n\n\t\t// Eth Module\n\t\tthis.eth = Object.assign(eth, {\n\t\t\t// ENS module\n\t\t\tens: self.use(ENS, registryAddresses.main), // registry address defaults to main network\n\n\t\t\t// Iban helpers\n\t\t\tIban,\n\n\t\t\tnet: self.use(Net),\n\t\t\tpersonal: self.use(Personal),\n\n\t\t\t// Contract helper and module\n\t\t\tContract: ContractBuilder,\n\n\t\t\t// ABI Helpers\n\t\t\tabi,\n\n\t\t\t// Accounts helper\n\t\t\taccounts,\n\t\t});\n\t}\n}\nexport default Web3;\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}