{"ast":null,"code":"var __awaiter = this && this.__awaiter || function (thisArg, _arguments, P, generator) {\n  function adopt(value) {\n    return value instanceof P ? value : new P(function (resolve) {\n      resolve(value);\n    });\n  }\n  return new (P || (P = Promise))(function (resolve, reject) {\n    function fulfilled(value) {\n      try {\n        step(generator.next(value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function rejected(value) {\n      try {\n        step(generator[\"throw\"](value));\n      } catch (e) {\n        reject(e);\n      }\n    }\n    function step(result) {\n      result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected);\n    }\n    step((generator = generator.apply(thisArg, _arguments || [])).next());\n  });\n};\nexport function getId(requestManager) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return requestManager.send({\n      method: 'net_version',\n      params: []\n    });\n  });\n}\nexport function getPeerCount(requestManager) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return requestManager.send({\n      method: 'net_peerCount',\n      params: []\n    });\n  });\n}\nexport function isListening(requestManager) {\n  return __awaiter(this, void 0, void 0, function* () {\n    return requestManager.send({\n      method: 'net_listening',\n      params: []\n    });\n  });\n}","map":{"version":3,"names":["getId","requestManager","send","method","params","getPeerCount","isListening"],"sources":["C:\\Users\\USER\\Documents\\Dapp\\Abstract\\frontend\\node_modules\\web3-rpc-methods\\src\\net_rpc_methods.ts"],"sourcesContent":["/*\nThis file is part of web3.js.\n\nweb3.js is free software: you can redistribute it and/or modify\nit under the terms of the GNU Lesser General Public License as published by\nthe Free Software Foundation, either version 3 of the License, or\n(at your option) any later version.\n\nweb3.js is distributed in the hope that it will be useful,\nbut WITHOUT ANY WARRANTY; without even the implied warranty of\nMERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the\nGNU Lesser General Public License for more details.\n\nYou should have received a copy of the GNU Lesser General Public License\nalong with web3.js.  If not, see <http://www.gnu.org/licenses/>.\n*/\nimport { Web3RequestManager } from 'web3-core';\nimport { Web3NetAPI } from 'web3-types';\n\nexport async function getId(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_version',\n\t\tparams: [],\n\t});\n}\n\nexport async function getPeerCount(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_peerCount',\n\t\tparams: [],\n\t});\n}\n\nexport async function isListening(requestManager: Web3RequestManager<Web3NetAPI>) {\n\treturn requestManager.send({\n\t\tmethod: 'net_listening',\n\t\tparams: [],\n\t});\n}\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;AAmBA,OAAM,SAAgBA,KAAKA,CAACC,cAA8C;;IACzE,OAAOA,cAAc,CAACC,IAAI,CAAC;MAC1BC,MAAM,EAAE,aAAa;MACrBC,MAAM,EAAE;KACR,CAAC;EACH,CAAC;;AAED,OAAM,SAAgBC,YAAYA,CAACJ,cAA8C;;IAChF,OAAOA,cAAc,CAACC,IAAI,CAAC;MAC1BC,MAAM,EAAE,eAAe;MACvBC,MAAM,EAAE;KACR,CAAC;EACH,CAAC;;AAED,OAAM,SAAgBE,WAAWA,CAACL,cAA8C;;IAC/E,OAAOA,cAAc,CAACC,IAAI,CAAC;MAC1BC,MAAM,EAAE,eAAe;MACvBC,MAAM,EAAE;KACR,CAAC;EACH,CAAC"},"metadata":{},"sourceType":"module","externalDependencies":[]}