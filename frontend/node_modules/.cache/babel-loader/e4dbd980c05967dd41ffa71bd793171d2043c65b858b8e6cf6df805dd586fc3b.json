{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Dapp\\\\Abstract\\\\frontend\\\\src\\\\Components\\\\SendFunds.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport Web3 from 'web3';\nimport smartWalletABI from './abi/SmartWallet.json';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartWalletAddress = \"0xed7D26d6A04FC8318ab88e43eEB281ef296E509e\";\nconst SendFunds = () => {\n  _s();\n  const [recipient, setRecipient] = useState('');\n  const [amount, setAmount] = useState('');\n  const [web3, setWeb3] = useState(null);\n  const [accounts, setAccounts] = useState([]);\n  useEffect(() => {\n    // Initialize Web3 and fetch accounts when the component mounts\n    const initWeb3 = async () => {\n      if (window.ethereum) {\n        const web3Instance = new Web3(window.ethereum);\n        setWeb3(web3Instance);\n        try {\n          // Request account access if needed\n          await window.ethereum.request({\n            method: 'eth_requestAccounts'\n          });\n          const accs = await web3Instance.eth.getAccounts();\n          setAccounts(accs);\n        } catch (error) {\n          console.error('Error connecting to wallet:', error);\n          alert('Failed to connect wallet. Check the console for more details.');\n        }\n      } else {\n        alert('MetaMask is not installed. Please install MetaMask to use this DApp.');\n      }\n    };\n    initWeb3();\n  }, []);\n  const sendEther = async () => {\n    if (!web3 || !accounts.length) {\n      alert(\"Please connect your wallet first!\");\n      return;\n    }\n    try {\n      const contract = new web3.eth.Contract(smartWalletABI.abi, smartWalletAddress);\n      const amountInWei = web3.utils.toWei(amount, 'ether');\n      await contract.methods.sendEther(recipient, amountInWei).send({\n        from: accounts[0]\n      });\n      alert(`Sent ${amount} ETH to ${recipient}`);\n    } catch (error) {\n      console.error('Error sending Ether:', error);\n      alert('Failed to send Ether. Check the console for more details.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: recipient,\n      onChange: e => setRecipient(e.target.value),\n      placeholder: \"Recipient Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: amount,\n      onChange: e => setAmount(e.target.value),\n      placeholder: \"Amount in Ether\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: sendEther,\n      children: \"Send Ether\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 9\n  }, this);\n};\n_s(SendFunds, \"M7tGUQz8uVJKlceAMpF6LYiBYMc=\");\n_c = SendFunds;\nexport default SendFunds;\nvar _c;\n$RefreshReg$(_c, \"SendFunds\");","map":{"version":3,"names":["React","useState","useEffect","Web3","smartWalletABI","jsxDEV","_jsxDEV","smartWalletAddress","SendFunds","_s","recipient","setRecipient","amount","setAmount","web3","setWeb3","accounts","setAccounts","initWeb3","window","ethereum","web3Instance","request","method","accs","eth","getAccounts","error","console","alert","sendEther","length","contract","Contract","abi","amountInWei","utils","toWei","methods","send","from","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Dapp/Abstract/frontend/src/Components/SendFunds.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport Web3 from 'web3';\r\nimport smartWalletABI from './abi/SmartWallet.json';\r\n\r\nconst smartWalletAddress = \"0xed7D26d6A04FC8318ab88e43eEB281ef296E509e\";\r\n\r\nconst SendFunds = () => {\r\n    const [recipient, setRecipient] = useState('');\r\n    const [amount, setAmount] = useState('');\r\n    const [web3, setWeb3] = useState(null);\r\n    const [accounts, setAccounts] = useState([]);\r\n\r\n    useEffect(() => {\r\n        // Initialize Web3 and fetch accounts when the component mounts\r\n        const initWeb3 = async () => {\r\n            if (window.ethereum) {\r\n                const web3Instance = new Web3(window.ethereum);\r\n                setWeb3(web3Instance);\r\n                try {\r\n                    // Request account access if needed\r\n                    await window.ethereum.request({ method: 'eth_requestAccounts' });\r\n                    const accs = await web3Instance.eth.getAccounts();\r\n                    setAccounts(accs);\r\n                } catch (error) {\r\n                    console.error('Error connecting to wallet:', error);\r\n                    alert('Failed to connect wallet. Check the console for more details.');\r\n                }\r\n            } else {\r\n                alert('MetaMask is not installed. Please install MetaMask to use this DApp.');\r\n            }\r\n        };\r\n\r\n        initWeb3();\r\n    }, []);\r\n\r\n    const sendEther = async () => {\r\n        if (!web3 || !accounts.length) {\r\n            alert(\"Please connect your wallet first!\");\r\n            return;\r\n        }\r\n\r\n        try {\r\n            const contract = new web3.eth.Contract(smartWalletABI.abi, smartWalletAddress);\r\n            const amountInWei = web3.utils.toWei(amount, 'ether');\r\n            await contract.methods.sendEther(recipient, amountInWei)\r\n                .send({ from: accounts[0] });\r\n\r\n            alert(`Sent ${amount} ETH to ${recipient}`);\r\n        } catch (error) {\r\n            console.error('Error sending Ether:', error);\r\n            alert('Failed to send Ether. Check the console for more details.');\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input \r\n                type=\"text\" \r\n                value={recipient} \r\n                onChange={(e) => setRecipient(e.target.value)} \r\n                placeholder=\"Recipient Address\"\r\n            />\r\n            <input \r\n                type=\"text\" \r\n                value={amount} \r\n                onChange={(e) => setAmount(e.target.value)} \r\n                placeholder=\"Amount in Ether\"\r\n            />\r\n            <button onClick={sendEther}>Send Ether</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default SendFunds;\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}