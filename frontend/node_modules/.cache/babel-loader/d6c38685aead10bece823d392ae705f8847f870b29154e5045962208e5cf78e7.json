{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Dapp\\\\Abstract\\\\frontend\\\\src\\\\Components\\\\WalletDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport SmartWalletABI from './abi/SmartWallet.json'; // Import Smart Wallet contract ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartWalletAddress = \"0x24B3c7704709ed1491473F30393FFc93cFB0FC34\"; // Replace with your Smart Wallet contract's address\n\nconst WalletDisplay = () => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  const fetchBalance = async () => {\n    try {\n      const web3 = new Web3(window.ethereum);\n      const contract = new web3.eth.Contract(SmartWalletABI.abi, smartWalletAddress);\n      const result = await contract.methods.getBalance(address).call();\n      const balanceInEther = web3.utils.fromWei(result, 'ether');\n      setBalance(balanceInEther);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n      if (error.message.includes('Failed to fetch')) {\n        alert('Failed to connect to the Ethereum network. Check your provider or network connection.');\n      } else {\n        alert('Failed to fetch balance. Check the console for more details.');\n      }\n    }\n  };\n  const inputStyle = {\n    padding: '10px',\n    margin: '10px',\n    fontSize: '16px'\n  };\n  const buttonStyle = {\n    padding: '10px 20px',\n    background: 'blue',\n    color: 'white',\n    border: 'none',\n    borderRadius: '5px',\n    cursor: 'pointer'\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: address,\n      onChange: e => setAddress(e.target.value),\n      placeholder: \"Enter Ethereum Address\",\n      style: inputStyle\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchBalance,\n      style: buttonStyle,\n      children: \"Check Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), balance && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Balance: \", balance, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 9\n  }, this);\n};\n_s(WalletDisplay, \"lNftjlBd3/VTYt0oxKuDb8ogvM0=\");\n_c = WalletDisplay;\nexport default WalletDisplay;\nvar _c;\n$RefreshReg$(_c, \"WalletDisplay\");","map":{"version":3,"names":["React","useState","Web3","SmartWalletABI","jsxDEV","_jsxDEV","smartWalletAddress","WalletDisplay","_s","address","setAddress","balance","setBalance","fetchBalance","web3","window","ethereum","contract","eth","Contract","abi","result","methods","getBalance","call","balanceInEther","utils","fromWei","error","console","message","includes","alert","inputStyle","padding","margin","fontSize","buttonStyle","background","color","border","borderRadius","cursor","children","type","value","onChange","e","target","placeholder","style","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Dapp/Abstract/frontend/src/Components/WalletDisplay.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Web3 from 'web3';\r\nimport SmartWalletABI from './abi/SmartWallet.json'; // Import Smart Wallet contract ABI\r\n\r\nconst smartWalletAddress = \"0x24B3c7704709ed1491473F30393FFc93cFB0FC34\"; // Replace with your Smart Wallet contract's address\r\n\r\nconst WalletDisplay = () => {\r\n    const [address, setAddress] = useState('');\r\n    const [balance, setBalance] = useState('');\r\n\r\n    const fetchBalance = async () => {\r\n        try {\r\n            \r\n            const web3 = new Web3(window.ethereum);\r\n    \r\n            \r\n            const contract = new web3.eth.Contract(SmartWalletABI.abi, smartWalletAddress);\r\n    \r\n          \r\n            const result = await contract.methods.getBalance(address).call();\r\n    \r\n            \r\n            const balanceInEther = web3.utils.fromWei(result, 'ether');\r\n            setBalance(balanceInEther);\r\n        } catch (error) {\r\n            console.error('Error fetching balance:', error);\r\n            \r\n            \r\n            if (error.message.includes('Failed to fetch')) {\r\n                alert('Failed to connect to the Ethereum network. Check your provider or network connection.');\r\n            } else {\r\n                alert('Failed to fetch balance. Check the console for more details.');\r\n            }\r\n        }\r\n    };\r\n    \r\n   \r\n    const inputStyle = {\r\n        padding: '10px',\r\n        margin: '10px',\r\n        fontSize: '16px',\r\n    };\r\n\r\n    const buttonStyle = {\r\n        padding: '10px 20px',\r\n        background: 'blue',\r\n        color: 'white',\r\n        border: 'none',\r\n        borderRadius: '5px',\r\n        cursor: 'pointer',\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                placeholder=\"Enter Ethereum Address\"\r\n                style={inputStyle} \r\n            />\r\n            <button onClick={fetchBalance} style={buttonStyle}>Check Balance</button> \r\n            {balance && <p>Balance: {balance} ETH</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WalletDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,cAAc,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,kBAAkB,GAAG,4CAA4C,CAAC,CAAC;;AAEzE,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MAEA,MAAMC,IAAI,GAAG,IAAIZ,IAAI,CAACa,MAAM,CAACC,QAAQ,CAAC;MAGtC,MAAMC,QAAQ,GAAG,IAAIH,IAAI,CAACI,GAAG,CAACC,QAAQ,CAAChB,cAAc,CAACiB,GAAG,EAAEd,kBAAkB,CAAC;MAG9E,MAAMe,MAAM,GAAG,MAAMJ,QAAQ,CAACK,OAAO,CAACC,UAAU,CAACd,OAAO,CAAC,CAACe,IAAI,CAAC,CAAC;MAGhE,MAAMC,cAAc,GAAGX,IAAI,CAACY,KAAK,CAACC,OAAO,CAACN,MAAM,EAAE,OAAO,CAAC;MAC1DT,UAAU,CAACa,cAAc,CAAC;IAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAG/C,IAAIA,KAAK,CAACE,OAAO,CAACC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;QAC3CC,KAAK,CAAC,uFAAuF,CAAC;MAClG,CAAC,MAAM;QACHA,KAAK,CAAC,8DAA8D,CAAC;MACzE;IACJ;EACJ,CAAC;EAGD,MAAMC,UAAU,GAAG;IACfC,OAAO,EAAE,MAAM;IACfC,MAAM,EAAE,MAAM;IACdC,QAAQ,EAAE;EACd,CAAC;EAED,MAAMC,WAAW,GAAG;IAChBH,OAAO,EAAE,WAAW;IACpBI,UAAU,EAAE,MAAM;IAClBC,KAAK,EAAE,OAAO;IACdC,MAAM,EAAE,MAAM;IACdC,YAAY,EAAE,KAAK;IACnBC,MAAM,EAAE;EACZ,CAAC;EAED,oBACIrC,OAAA;IAAAsC,QAAA,gBACItC,OAAA;MACIuC,IAAI,EAAC,MAAM;MACXC,KAAK,EAAEpC,OAAQ;MACfqC,QAAQ,EAAGC,CAAC,IAAKrC,UAAU,CAACqC,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC,wBAAwB;MACpCC,KAAK,EAAEjB;IAAW;MAAAkB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACrB,CAAC,eACFjD,OAAA;MAAQkD,OAAO,EAAE1C,YAAa;MAACqC,KAAK,EAAEb,WAAY;MAAAM,QAAA,EAAC;IAAa;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACxE3C,OAAO,iBAAIN,OAAA;MAAAsC,QAAA,GAAG,WAAS,EAAChC,OAAO,EAAC,MAAI;IAAA;MAAAwC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEd,CAAC;AAAC9C,EAAA,CA3DID,aAAa;AAAAiD,EAAA,GAAbjD,aAAa;AA6DnB,eAAeA,aAAa;AAAC,IAAAiD,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}