{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\USER\\\\Documents\\\\Dapp\\\\Abstract\\\\frontend\\\\src\\\\Components\\\\WalletDisplay.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport Web3 from 'web3';\nimport SmartWalletABI from './abi/SmartWallet.json'; // Import Smart Wallet contract ABI\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst smartWalletAddress = \"0x56654810ec4Ea6E31247560D5aF48822826033C3\"; // Replace with your Smart Wallet contract's address\n\nconst WalletDisplay = () => {\n  _s();\n  const [address, setAddress] = useState('');\n  const [balance, setBalance] = useState('');\n  const fetchBalance = async () => {\n    try {\n      const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\n\n      // Create a contract instance for the Smart Wallet contract\n      const contract = new web3.eth.Contract(SmartWalletABI, smartWalletAddress);\n\n      // Call the balanceOf method of the Smart Wallet contract\n      const result = await contract.methods.balanceOf(address).call();\n\n      // Convert the result to ether (if it's in wei)\n      const balanceInEther = web3.utils.fromWei(result, 'ether');\n      setBalance(balanceInEther);\n    } catch (error) {\n      console.error('Error fetching balance:', error);\n\n      // Enhanced error message\n      if (error.message.includes('Failed to fetch')) {\n        alert('Failed to connect to the Ethereum network. Check your provider or network connection.');\n      } else {\n        alert('Failed to fetch balance. Check the console for more details.');\n      }\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"text\",\n      value: address,\n      onChange: e => setAddress(e.target.value),\n      placeholder: \"Enter Ethereum Address\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchBalance,\n      children: \"Check Balance\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), balance && /*#__PURE__*/_jsxDEV(\"p\", {\n      children: [\"Balance: \", balance, \" ETH\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 25\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n};\n_s(WalletDisplay, \"lNftjlBd3/VTYt0oxKuDb8ogvM0=\");\n_c = WalletDisplay;\nexport default WalletDisplay;\nvar _c;\n$RefreshReg$(_c, \"WalletDisplay\");","map":{"version":3,"names":["React","useState","Web3","SmartWalletABI","jsxDEV","_jsxDEV","smartWalletAddress","WalletDisplay","_s","address","setAddress","balance","setBalance","fetchBalance","web3","givenProvider","contract","eth","Contract","result","methods","balanceOf","call","balanceInEther","utils","fromWei","error","console","message","includes","alert","children","type","value","onChange","e","target","placeholder","fileName","_jsxFileName","lineNumber","columnNumber","onClick","_c","$RefreshReg$"],"sources":["C:/Users/USER/Documents/Dapp/Abstract/frontend/src/Components/WalletDisplay.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport Web3 from 'web3';\r\nimport SmartWalletABI from './abi/SmartWallet.json'; // Import Smart Wallet contract ABI\r\n\r\nconst smartWalletAddress = \"0x56654810ec4Ea6E31247560D5aF48822826033C3\"; // Replace with your Smart Wallet contract's address\r\n\r\nconst WalletDisplay = () => {\r\n    const [address, setAddress] = useState('');\r\n    const [balance, setBalance] = useState('');\r\n\r\n    const fetchBalance = async () => {\r\n        try {\r\n            const web3 = new Web3(Web3.givenProvider || \"http://localhost:8545\");\r\n\r\n            // Create a contract instance for the Smart Wallet contract\r\n            const contract = new web3.eth.Contract(SmartWalletABI, smartWalletAddress);\r\n\r\n            // Call the balanceOf method of the Smart Wallet contract\r\n            const result = await contract.methods.balanceOf(address).call();\r\n\r\n            // Convert the result to ether (if it's in wei)\r\n            const balanceInEther = web3.utils.fromWei(result, 'ether');\r\n            setBalance(balanceInEther);\r\n        } catch (error) {\r\n            console.error('Error fetching balance:', error);\r\n\r\n            // Enhanced error message\r\n            if (error.message.includes('Failed to fetch')) {\r\n                alert('Failed to connect to the Ethereum network. Check your provider or network connection.');\r\n            } else {\r\n                alert('Failed to fetch balance. Check the console for more details.');\r\n            }\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <input\r\n                type=\"text\"\r\n                value={address}\r\n                onChange={(e) => setAddress(e.target.value)}\r\n                placeholder=\"Enter Ethereum Address\"\r\n            />\r\n            <button onClick={fetchBalance}>Check Balance</button>\r\n            {balance && <p>Balance: {balance} ETH</p>}\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default WalletDisplay;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,IAAI,MAAM,MAAM;AACvB,OAAOC,cAAc,MAAM,wBAAwB,CAAC,CAAC;AAAA,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,kBAAkB,GAAG,4CAA4C,CAAC,CAAC;;AAEzE,MAAMC,aAAa,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACxB,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAC1C,MAAM,CAACU,OAAO,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,EAAE,CAAC;EAE1C,MAAMY,YAAY,GAAG,MAAAA,CAAA,KAAY;IAC7B,IAAI;MACA,MAAMC,IAAI,GAAG,IAAIZ,IAAI,CAACA,IAAI,CAACa,aAAa,IAAI,uBAAuB,CAAC;;MAEpE;MACA,MAAMC,QAAQ,GAAG,IAAIF,IAAI,CAACG,GAAG,CAACC,QAAQ,CAACf,cAAc,EAAEG,kBAAkB,CAAC;;MAE1E;MACA,MAAMa,MAAM,GAAG,MAAMH,QAAQ,CAACI,OAAO,CAACC,SAAS,CAACZ,OAAO,CAAC,CAACa,IAAI,CAAC,CAAC;;MAE/D;MACA,MAAMC,cAAc,GAAGT,IAAI,CAACU,KAAK,CAACC,OAAO,CAACN,MAAM,EAAE,OAAO,CAAC;MAC1DP,UAAU,CAACW,cAAc,CAAC;IAC9B,CAAC,CAAC,OAAOG,KAAK,EAAE;MACZC,OAAO,CAACD,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;;MAE/C;MACA,IAAIA,KAAK,CAACE,OAAO,CAACC,QAAQ,CAAC,iBAAiB,CAAC,EAAE;QAC3CC,KAAK,CAAC,uFAAuF,CAAC;MAClG,CAAC,MAAM;QACHA,KAAK,CAAC,8DAA8D,CAAC;MACzE;IACJ;EACJ,CAAC;EAED,oBACIzB,OAAA;IAAA0B,QAAA,gBACI1B,OAAA;MACI2B,IAAI,EAAC,MAAM;MACXC,KAAK,EAAExB,OAAQ;MACfyB,QAAQ,EAAGC,CAAC,IAAKzB,UAAU,CAACyB,CAAC,CAACC,MAAM,CAACH,KAAK,CAAE;MAC5CI,WAAW,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvC,CAAC,eACFpC,OAAA;MAAQqC,OAAO,EAAE7B,YAAa;MAAAkB,QAAA,EAAC;IAAa;MAAAO,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,EACpD9B,OAAO,iBAAIN,OAAA;MAAA0B,QAAA,GAAG,WAAS,EAACpB,OAAO,EAAC,MAAI;IAAA;MAAA2B,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACxC,CAAC;AAEd,CAAC;AAACjC,EAAA,CAzCID,aAAa;AAAAoC,EAAA,GAAbpC,aAAa;AA2CnB,eAAeA,aAAa;AAAC,IAAAoC,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}